-- =================================================================
--  VPN Manager Supabase Database Reset Script (Final Corrected Version)
-- =================================================================
--  Instructions:
--  1. Navigate to the "SQL Editor" in your Supabase project.
--  2. Create a "+ New query".
--  3. Paste the ENTIRE content of this script into the editor.
--  4. Click "RUN". This will completely reset your tables to the correct state.
-- =================================================================

-- Step 1: Drop all existing tables to ensure a clean slate.
-- The CASCADE option will also remove any dependent objects.
DROP TABLE IF EXISTS proxies CASCADE;
DROP TABLE IF EXISTS accounts CASCADE;
DROP TABLE IF EXISTS tunnels CASCADE;
DROP TABLE IF EXISTS metadata CASCADE;

-- -----------------------------------------------------------------
--  Table 1: proxies
--  Recreated with the final, correct schema including all necessary columns.
-- -----------------------------------------------------------------
CREATE TABLE proxies (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proxy_data TEXT NOT NULL UNIQUE,
    status VARCHAR(50) DEFAULT 'unknown' NOT NULL,
    latency INT DEFAULT 0,
    last_checked TIMESTAMPTZ,
    country VARCHAR(10),
    org TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

COMMENT ON TABLE proxies IS 'Stores the list, status, and metadata of all proxy servers.';

-- -----------------------------------------------------------------
--  Table 2: accounts
-- -----------------------------------------------------------------
CREATE TABLE accounts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    secret_key TEXT,
    is_active BOOLEAN DEFAULT true NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

COMMENT ON TABLE accounts IS 'Stores user accounts for a VPN service.';

-- -----------------------------------------------------------------
--  Table 3: tunnels
-- -----------------------------------------------------------------
CREATE TABLE tunnels (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    domain TEXT,
    status VARCHAR(50) DEFAULT 'unknown' NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

COMMENT ON TABLE tunnels IS 'Stores tunnel or VPN subscription configurations.';

-- -----------------------------------------------------------------
--  Table 4: metadata
-- -----------------------------------------------------------------
CREATE TABLE metadata (
    key VARCHAR(255) PRIMARY KEY,
    value JSONB,
    updated_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

COMMENT ON TABLE metadata IS 'A key-value store for application-wide metadata.';

-- -----------------------------------------------------------------
--  Step 3: Re-apply Row Level Security (RLS) and Policies
-- -----------------------------------------------------------------
ALTER TABLE proxies ENABLE ROW LEVEL SECURITY;
ALTER TABLE accounts ENABLE ROW LEVEL SECURITY;
ALTER TABLE tunnels ENABLE ROW LEVEL SECURITY;
ALTER TABLE metadata ENABLE ROW LEVEL SECURITY;

-- Create policies to allow public read access (anon key can SELECT)
CREATE POLICY "Allow public read access" ON proxies FOR SELECT USING (true);
CREATE POLICY "Allow public read access" ON accounts FOR SELECT USING (true);
CREATE POLICY "Allow public read access" ON tunnels FOR SELECT USING (true);
CREATE POLICY "Allow public read access" ON metadata FOR SELECT USING (true);

-- WARNING: This is NOT secure for a public-facing application.
CREATE POLICY "Allow full access for admin" ON proxies FOR ALL USING (true);
CREATE POLICY "Allow full access for admin" ON accounts FOR ALL USING (true);
CREATE POLICY "Allow full access for admin" ON tunnels FOR ALL USING (true);
CREATE POLICY "Allow full access for admin" ON metadata FOR ALL USING (true);

-- =================================================================
--  End of Script
-- =================================================================
-- Your database tables have been successfully reset.
-- =================================================================